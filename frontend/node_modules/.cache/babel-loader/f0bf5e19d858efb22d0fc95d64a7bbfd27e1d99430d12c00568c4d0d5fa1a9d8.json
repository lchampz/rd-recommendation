{"ast":null,"code":"const getScorePoints = (product, selectedPreferences, selectedFeatures) => {\n  const hasPreference = product.preferences.some(preference => selectedPreferences.includes(preference));\n  const hasFeature = product.features.some(feature => selectedFeatures.includes(feature));\n  const hasBoth = hasPreference + hasFeature + 1;\n  return hasBoth;\n};\nconst getRecommendations = (formData = {\n  selectedPreferences: [],\n  selectedFeatures: []\n}, products = [{\n  id: 0,\n  preferences: [],\n  features: [],\n  name: ''\n}], oneProduct = false) => {\n  const {\n    selectedPreferences,\n    selectedFeatures\n  } = formData;\n  let recommendation = products.filter(product => {\n    const hasPreference = product.preferences.some(preference => selectedPreferences.includes(preference));\n    const hasFeature = product.features.some(feature => selectedFeatures.includes(feature));\n    return hasPreference || hasFeature;\n  });\n\n  // Adiciona informações de contagem para cada produto\n  recommendation = recommendation.map(product => {\n    // Conta quantas preferências foram encontradas\n    const preferencesMatched = selectedPreferences.filter(preference => product.preferences.includes(preference)).length;\n\n    // Conta quantas funcionalidades foram encontradas\n    const featuresMatched = selectedFeatures.filter(feature => product.features.includes(feature)).length;\n\n    // Total de matches\n    const totalMatches = preferencesMatched + featuresMatched;\n\n    // Calcula score baseado na quantidade de matches\n    const score = preferencesMatched * 3 + featuresMatched * 2 + (totalMatches > 0 ? 5 : 0);\n    return {\n      ...product,\n      preferencesMatched,\n      featuresMatched,\n      totalMatches,\n      score,\n      // Lista das preferências que correspondem\n      matchedPreferences: selectedPreferences.filter(preference => product.preferences.includes(preference)),\n      // Lista das funcionalidades que correspondem\n      matchedFeatures: selectedFeatures.filter(feature => product.features.includes(feature))\n    };\n  });\n\n  // Ordena por score (maior primeiro) e depois por total de matches\n  recommendation.sort((a, b) => {\n    if (b.score !== a.score) {\n      return b.score - a.score;\n    }\n    return b.totalMatches - a.totalMatches;\n  });\n  return oneProduct ? recommendation[0] : recommendation;\n};\nexport default {\n  getRecommendations\n};","map":{"version":3,"names":["getScorePoints","product","selectedPreferences","selectedFeatures","hasPreference","preferences","some","preference","includes","hasFeature","features","feature","hasBoth","getRecommendations","formData","products","id","name","oneProduct","recommendation","filter","map","preferencesMatched","length","featuresMatched","totalMatches","score","matchedPreferences","matchedFeatures","sort","a","b"],"sources":["/Users/victor/Documents/dev/monorepo/frontend/src/services/recommendation.service.js"],"sourcesContent":["const getScorePoints = (product, selectedPreferences, selectedFeatures) => {\n  const hasPreference = product.preferences.some((preference) =>\n    selectedPreferences.includes(preference)\n  );\n  const hasFeature = product.features.some((feature) =>\n    selectedFeatures.includes(feature)\n  );\n  const hasBoth = hasPreference + hasFeature + 1;\n  return hasBoth;\n};\n\nconst getRecommendations = (\n  formData = { selectedPreferences: [], selectedFeatures: [] },\n  products = [{ id: 0, preferences: [], features: [], name: '' }],\n  oneProduct = false\n) => {\n  const { selectedPreferences, selectedFeatures } = formData;\n\n  let recommendation = products.filter((product) => {\n    const hasPreference = product.preferences.some((preference) =>\n      selectedPreferences.includes(preference)\n    );\n    const hasFeature = product.features.some((feature) =>\n      selectedFeatures.includes(feature)\n    );\n    return hasPreference || hasFeature;\n  });\n\n  // Adiciona informações de contagem para cada produto\n  recommendation = recommendation.map(product => {\n    // Conta quantas preferências foram encontradas\n    const preferencesMatched = selectedPreferences.filter(preference =>\n      product.preferences.includes(preference)\n    ).length;\n\n    // Conta quantas funcionalidades foram encontradas\n    const featuresMatched = selectedFeatures.filter(feature =>\n      product.features.includes(feature)\n    ).length;\n\n    // Total de matches\n    const totalMatches = preferencesMatched + featuresMatched;\n\n    // Calcula score baseado na quantidade de matches\n    const score = (preferencesMatched * 3) + (featuresMatched * 2) + (totalMatches > 0 ? 5 : 0);\n\n    return {\n      ...product,\n      preferencesMatched,\n      featuresMatched,\n      totalMatches,\n      score,\n      // Lista das preferências que correspondem\n      matchedPreferences: selectedPreferences.filter(preference =>\n        product.preferences.includes(preference)\n      ),\n      // Lista das funcionalidades que correspondem\n      matchedFeatures: selectedFeatures.filter(feature =>\n        product.features.includes(feature)\n      )\n    };\n  });\n\n  // Ordena por score (maior primeiro) e depois por total de matches\n  recommendation.sort((a, b) => {\n    if (b.score !== a.score) {\n      return b.score - a.score;\n    }\n    return b.totalMatches - a.totalMatches;\n  });\n\n  return oneProduct ? recommendation[0] : recommendation;\n};\n\nexport default { getRecommendations };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}